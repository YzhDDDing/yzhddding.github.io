---
---

@string{aps = {American Physical Society,}}

@article{yu2024Knight,
  author   = {Yu, Zehong and Yang, Yixiao and Su, Zhuo and Wang, Rui and Tao, Yang and Jiang, Yu},
  journal  = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  title    = {Knight: Optimizing Code Generation for Simulink Models With Loop Reshaping},
  year     = {2024},
  volume   = {},
  number   = {},
  pages    = {1-1},
  keywords = {Codes;Software packages;Analytical models;Semantics;Generators;Data models;Switches;Simulink Models;Loop-Semantic;Code Generation},
  doi      = {10.1109/TCAD.2024.3438691},
  selected = true
}

@inproceedings{yu2024Frodo,
  author    = {Yu, Zehong and Su, Zhuo and Jiang, Yu and Cui, Aiguo and Wang, Rui},
  title     = {Efficient Code Generation for Data-Intensive Simulink Models via Redundancy Elimination},
  year      = {2024},
  isbn      = {9798400706011},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3649329.3656217},
  doi       = {10.1145/3649329.3656217},
  abstract  = {Simulink has emerged as the fundamental infrastructure that supports modeling, simulation, verification, and code generation for embedded software development. To improve the performance of the code generated from Simulink models, state-of-the-art code generators employ various optimization techniques, such as expression folding, variable reuse, and parallelism. However, they overlook the presence of redundant calculations within data-intensive models widely used to perform substantial data processing in embedded scenarios, which can significantly undermine the efficiency and performance of the generated code.This paper proposes Frodo, an efficient code generator for data-intensive Simulink models via redundancy elimination. Frodo first conducts model analysis to construct the dataflow graph and derive the I/O mapping of each block. Then, for each block within the dataflow graph, Frodo recursively determines its calculation range by leveraging the I/O mapping of its subsequent blocks. After that, Frodo generates concise code for optimizable blocks in accordance with the precise calculation range. We implemented and evaluated Frodo on benchmark Simulink models. Compared with the state-of-the-art code generators Simulink Embedded Coder, DFSynth, and HCG, the code generated by Frodo is 1.17X - 8.55X faster in terms of execution duration across different compilers and architectures, without incurring additional overhead of memory usage.},
  booktitle = {Proceedings of the 61st ACM/IEEE Design Automation Conference},
  articleno = {20},
  numpages  = {6},
  keywords  = {simulink models, data-intensive, code generation},
  location  = {San Francisco, CA, USA},
  series    = {DAC '24},
  selected  = true
}

@article{yu2022mercury,
  title       = {Mercury: Instruction Pipeline Aware Code Generation for Simulink Models},
  author      = {Yu, Zehong and Su, Zhuo and Yang, Yixiao and Liang, Jie and Jiang, Yu and Cui, Aiguo and Chang, Wanli and Wang, Rui},
  journal     = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  volume      = {41},
  number      = {11},
  pages       = {4504--4515},
  year        = {2022},
  publisher   = {IEEE},
  selected    = {true},
  abbr        = {EMSOFT '22},
  dimensions  = {true},
  selected    = {true},
  pdf         = {Emsoft22_Mercury.pdf},
  bibtex_show = {true},
  selected    = true
}

@article{su2021mdd,
  title       = {Mdd: A unified model-driven design framework for embedded control software},
  author      = {Su, Zhuo and Wang, Dongyan and Yang, Yixiao and Yu, Zehong and Chang, Wanli and Li, Wen and Cui, Aiguo and Jiang, Yu and Sun, Jiaguang},
  journal     = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  volume      = {41},
  number      = {10},
  pages       = {3252--3265},
  year        = {2021},
  selected    = {true},
  publisher   = {IEEE},
  abbr        = {TCAD '21},
  selected    = {true},
  pdf         = {TCAD21_MDD.pdf},
  bibtex_show = {true}
}

@article{su2022phcg,
  title       = {PHCG: Optimizing Simulink Code Generation for Embedded System with SIMD Instructions},
  author      = {Su, Zhuo and Wang, Dongyan and Yu, Zehong and Yang, Yixiao and Jiang, Yu and Wang, Rui and Chang, Wanli and Li, Wen and Cui, Aiguo and Sun, Jiaguang},
  journal     = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  year        = {2022},
  selected    = {true},
  publisher   = {IEEE},
  abbr        = {TCAD '22},
  selected    = {true},
  pdf         = {TCAD22_PHCG.pdf},
  bibtex_show = {true}
}

@inproceedings{su2022hcg,
  title       = {HCG: optimizing embedded code generation of simulink with SIMD instruction synthesis},
  author      = {Su, Zhuo and Yu, Zehong and Wang, Dongyan and Yang, Yixiao and Jiang, Yu and Wang, Rui and Chang, Wanli and Sun, Jiaguang},
  booktitle   = {Proceedings of the 59th ACM/IEEE Design Automation Conference},
  pages       = {1033--1038},
  year        = {2022},
  abbr        = {DAC '22},
  selected    = {true},
  pdf         = {DAC22_HCG.pdf},
  bibtex_show = {true}
}
